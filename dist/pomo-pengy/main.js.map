{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/about-button/about-button.component.ts","./src/app/about-button/about-button.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/achievements/achievements.component.ts","./src/app/achievements/achievements.component.html","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/carousel/carousel.component.ts","./src/app/carousel/carousel.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/login-register-buttons/login-register-buttons.component.ts","./src/app/login-register-buttons/login-register-buttons.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/notes-page/notes-page.component.ts","./src/app/notes-page/notes-page.component.html","./src/app/pomo-page/pomo-page.component.ts","./src/app/pomo-page/pomo-page.component.html","./src/app/profile-page/profile-page.component.ts","./src/app/profile-page/profile-page.component.html","./src/app/register-page/register-page.component.ts","./src/app/register-page/register-page.component.html","./src/app/session-button/session-button.component.ts","./src/app/session-button/session-button.component.html","./src/app/spotify-integration/spotify-integration.component.ts","./src/app/statistics/statistics.component.ts","./src/app/statistics/statistics.component.html","./src/app/storage-supervisor.service.ts","./src/app/task.service.ts","./src/app/text-editor/text-editor.component.ts","./src/app/text-editor/text-editor.component.html","./src/app/time-date/time-date.component.ts","./src/app/time-date/time-date.component.html","./src/app/timer.service.ts","./src/app/timer/timer.component.ts","./src/app/timer/timer.component.html","./src/app/to-do/to-do.component.ts","./src/app/to-do/to-do.component.html","./src/assets/animations/animations.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about-button',\n  templateUrl: './about-button.component.html',\n  styleUrl: './about-button.component.scss'\n})\nexport class AboutButtonComponent {\n\n}\n","<div>\n    <div routerLink=\"/about-pomo-pengy\" class = \"about-button\">learn more about pomopengy</div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrl: './about.component.scss',\n  animations: [fadeInAnimation],\n})\nexport class AboutComponent implements OnInit, OnDestroy{\n\n  ngOnInit() {\n    document.body.classList.add('about-body');\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove('about-body');\n  }\n\n}\n","<div @fadeIn>\n    <div class = \"header\">\n        <a routerLink=\"/\"><img src = \"../../assets/pomo_pengy_logo_light.png\" class=\"logo\"></a>\n        <a routerLink=\"/\"><p class=\"right-item\">< back to the site</p></a>\n    </div>\n    \n    <div class = \"content\">\n        <h3>what is pomopengy?</h3>\n        <p>pomopengy is a multi-feature productivity application designed for students by students. we aimed to incentivize task completion through earning achievements and badges.</p>\n        <p>our inspiration came from video games, such as valorant or league of legends, that give users a rank based on their performance and gives them rewards based on the amount of time/effort put towards the game.</p>\n    \n        <h3>our team</h3>\n        <div class = \"bio\">\n            <img src = \"../../assets/about-images/ethan-headshot.png\" class = \"headshot\">\n            <div class = \"info\">\n                <a href = \"https://ethanlphan.com\">Ethan Phan</a>\n                <p>visionary, lead developer</p>\n                <p>B.S. Computer Science, University at Buffalo</p>\n            </div>\n        </div>\n        <div class = \"bio\">\n            <div class = \"info\">\n                <a href = \"https://savina-chan.github.io\">Savina Chan</a>\n                <p>lead developer, asset procurer</p>\n                <p>B.A. Computer Science, New York University</p>\n            </div>\n            <img src = \"../../assets/about-images/savina-headshot.jpg\" class = \"headshot right\">\n        </div>\n    </div>\n</div>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-achievements',\n  templateUrl: './achievements.component.html',\n  styleUrl: './achievements.component.scss'\n})\nexport class AchievementsComponent {\n  displayInfo: boolean = false;\n\n  toggleInfo() {\n    this.displayInfo = !this.displayInfo\n  }\n\n  /* ------------------ TEMPORARY CODE ------------------ */\n  achievements_temp = [\n    \"Rookie Pengy\",\n    \"Apprentice Pengy\",\n    \"Junior Pengy Analyst\",\n    \"Associate Pengy\",\n    \"Pengy Analyst\",\n    \"Pengy Fellow\",\n    \"Pengy Researcher\",\n    \"Erudite Pengy\",\n    \"Luminary Pengy\",\n    \"Master Pengy\",\n    \"Doctor Pengy\",\n    \"Enlightened Pengy\"\n  ]\n\n  getRandomInt(max: number) {\n    return Math.floor(Math.random() * max);\n  }\n\n  cur = this.achievements_temp[this.getRandomInt(13)]\n}\n","<div class=\"levels-container\">\n    <div class = \"upper\">\n        <h2>study level\n            <a (click)=\"toggleInfo()\" [style.display]=\"displayInfo ? 'none' : 'inline'\" class = \"toggle\">˅</a>\n            <a (click)=\"toggleInfo()\" [style.display]=\"displayInfo ? 'inline' : 'none'\"class = \"toggle\">˄</a>\n        </h2>\n        <div [style.display]=\"displayInfo ? 'block' : 'none'\">\n            <p class=\"container-info\">inspired by the ranking feature in modern games, Pomo Pengy allows you to climb to higher ranks on the pyramid of pengy knowledge. The more hours of studying you put in, the higher your rank grows!</p>\n        </div>\n        <div class = \"center-all\">\n            <h1>{{cur}}</h1>\n        </div>\n    </div>\n    <div class = \"lower\">\n        <h2>achievements</h2>\n        <app-carousel></app-carousel>\n    </div>\n</div>","import { Injectable } from \"@angular/core\";\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpParams,\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { LoginInterface } from \"./login-interface\";\n\nimport { supervisor } from \"./storage-supervisor.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  sendRegister(data: { username: string; email: string; password: string }) {\n    return this.http.post(\"http://localhost:8080/api/register\", data);\n  }\n\n  sendLogin(data: { email: string; password: string }) {\n    return this.http.post<LoginInterface>(\n      \"http://localhost:8080/api/login\",\n      data,\n    );\n  }\n\n  sendTask(data: { title: string; dueDate: Date; include: boolean }) {\n    const token = supervisor.getItem(\"token\");\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      return this.http.post(\"http://localhost:8080/api/postTask\", data, {\n        headers,\n      });\n    }\n    // return an empty object\n    return new Observable<Object>();\n  }\n\n  getTasks() {\n    const token = supervisor.getItem(\"token\");\n    console.log(token);\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      return this.http.get(\"http://localhost:8080/api/getTasks\", { headers });\n    }\n    // return an empty object\n    return new Observable<Object>();\n  }\n\n  removeTask(data: { title: string }) {\n    const token = supervisor.getItem(\"token\");\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      const params = new HttpParams().set(\"title\", data.title);\n      return this.http.delete(\"http://localhost:8080/api/removeTask\", {\n        headers,\n        params,\n      });\n    }\n    // return an empty object\n    return new Observable<Object>();\n  }\n\n  getUserStats() {\n    const token = supervisor.getItem(\"token\");\n    console.log(token);\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      return this.http.get(\"http://localhost:8080/api/sendStats\", { headers });\n    }\n    return new Observable<Object>();\n  }\n\n  logout() {\n    supervisor.removeItem(\"username\");\n    supervisor.removeItem(\"token\");\n  }\n\n  checkLogInStatus() {\n    const user = supervisor.getItem('username');\n    const token = supervisor.getItem('token');\n    if(user && token) {\n      return [user, token]\n    }\n    return []\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { PomoPageComponent } from './pomo-page/pomo-page.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { NotesPageComponent } from './notes-page/notes-page.component';\nimport { ProfilePageComponent } from './profile-page/profile-page.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  {path:\"\", component:HomePageComponent},\n  {path:\"pomo\", component:PomoPageComponent},\n  {path:\"notes\", component:NotesPageComponent},\n  {path:\"register\", component:RegisterPageComponent},\n  {path:\"login\", component:LoginPageComponent},\n  {path:\"profile\", component: ProfilePageComponent},\n  {path: \"about-pomo-pengy\", component: AboutComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { loadInAnimation} from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [loadInAnimation]\n})\nexport class AppComponent {\n  title = 'pengy-portal-frontend';\n}\n","<div @loadIn>\n    <router-outlet ></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TimeDateComponent } from './time-date/time-date.component';\nimport { SessionButtonComponent } from './session-button/session-button.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { ToDoComponent } from './to-do/to-do.component';\nimport { PomoPageComponent } from './pomo-page/pomo-page.component';\nimport { TimerComponent } from './timer/timer.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { NotesPageComponent } from './notes-page/notes-page.component';\nimport { SpotifyIntegrationComponent } from './spotify-integration/spotify-integration.component';\nimport { TextEditorComponent } from './text-editor/text-editor.component';\nimport { LoginRegisterButtonsComponent } from './login-register-buttons/login-register-buttons.component';\nimport { HeaderComponent } from './header/header.component';\n\nimport { MarkdownModule } from 'ngx-markdown';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ApiService } from './api.service';\nimport { ProfilePageComponent } from './profile-page/profile-page.component';\nimport { AchievementsComponent } from './achievements/achievements.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { CarouselComponent } from './carousel/carousel.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AboutComponent } from './about/about.component';\nimport { AboutButtonComponent } from './about-button/about-button.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TimeDateComponent,\n    SessionButtonComponent,\n    NavBarComponent,\n    HomePageComponent,\n    ToDoComponent,\n    PomoPageComponent,\n    TimerComponent,\n    LoginPageComponent,\n    RegisterPageComponent,\n    NotesPageComponent,\n    SpotifyIntegrationComponent,\n    TextEditorComponent,\n    LoginRegisterButtonsComponent,\n    HeaderComponent,\n    ProfilePageComponent,\n    AchievementsComponent,\n    StatisticsComponent,\n    CarouselComponent,\n    LogoutComponent,\n    AboutComponent,\n    AboutButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    MarkdownModule.forRoot(),\n    MarkdownModule.forChild(),\n    HttpClientModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n  ],\n  providers: [\n    ApiService\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-carousel\",\n  templateUrl: \"./carousel.component.html\",\n  styleUrl: \"./carousel.component.scss\",\n})\nexport class CarouselComponent {\n  achievement_badges = [\n    // Completion of first study session\n    {\n      image: \"../../assets/achievement-badges/bronze-plain.png\",\n      desc: \"Earned for the completion of your first study session!🎖️\",\n    },\n    // Completion of first task\n    {\n      image: \"../../assets/achievement-badges/bronze-lightning.png\",\n      desc: \"Awarded for completing your first task! ⚡\",\n    },\n    // Completion of 5 tasks\n    {\n      image: \"../../assets/achievement-badges/bronze-star.png\",\n      desc: \"Achieved by completing 5 tasks. ⭐\",\n    },\n    // Completion of 90 minutes of studying\n    {\n      image: \"../../assets/achievement-badges/bronze-clock.png\",\n      desc: \"Granted for completing 90 minutes of study time. ⏰\",\n    },\n    // Completion of 5 study sessions\n    {\n      image: \"../../assets/achievement-badges/bronze-book.png\",\n      desc: \"Earned for completing 5 study sessions. 📚\",\n    },\n    // Completion of 10 study sessions\n    {\n      image: \"../../assets/achievement-badges/bronze-brain.png\",\n      desc: \"Awarded for completing 10 study sessions. 🧠\",\n    },\n    // Completion of at least 10 study sessions and 10 tasks\n    {\n      image: \"../../assets/achievement-badges/bronze-penguin.png\",\n      desc: \"Granted for completing at least 10 study sessions and 10 tasks! 🐧\",\n    },\n    // Completion of 15 study sessions\n    {\n      image: \"../../assets/achievement-badges/silver-plain.png\",\n      desc: \"Achieved by completing 15 study sessions! 🎉\",\n    },\n    // Completion of 15 tasks\n    {\n      image: \"../../assets/achievement-badges/silver-star.png\",\n      desc: \"Awarded for completing 15 tasks! 🌟\",\n    },\n    // Completion of 750 minutes of studying\n    {\n      image: \"../../assets/achievement-badges/silver-clock.png\",\n      desc: \"Granted for completing 750 minutes of study time! ⏱️\",\n    },\n    // Completion of 20 study sessions\n    {\n      image: \"../../assets/achievement-badges/silver-book.png\",\n      desc: \"Earned for completing 20 study sessions! 📖\",\n    },\n    // Completion of 25 study sessions\n    {\n      image: \"../../assets/achievement-badges/silver-brain.png\",\n      desc: \"Awarded for completing 25 study sessions! 🧠\",\n    },\n    // Completion of at least 25 study sessions and 25 tasks\n    {\n      image: \"../../assets/achievement-badges/silver-penguin.png\",\n      desc: \"Granted for completing at least 25 study sessions and 25 tasks! 🐧\",\n    },\n    // Completion of 50 tasks\n    {\n      image: \"../../assets/achievement-badges/gold-plain.png\",\n      desc: \"Achieved by completing 50 tasks! 🎖️\",\n    },\n    // Completion of 50 study sessions\n    {\n      image: \"../../assets/achievement-badges/gold-lightning.png\",\n      desc: \"Awarded for completing 50 study sessions! ⚡\",\n    },\n    // Completion of 75 tasks\n    {\n      image: \"../../assets/achievement-badges/gold-star.png\",\n      desc: \"Granted for completing 75 tasks! 🌟\",\n    },\n    // Completion of 75 study sessions\n    {\n      image: \"../../assets/achievement-badges/gold-clock.png\",\n      desc: \"Earned for completing 75 study sessions! ⏰\",\n    },\n    // Completion of 100 tasks\n    {\n      image: \"../../assets/achievement-badges/gold-book.png\",\n      desc: \"Achieved by completing 100 tasks! 📘\",\n    },\n    // Completion of 100 study sessions\n    {\n      image: \"../../assets/achievement-badges/gold-brain.png\",\n      desc: \"Awarded for completing 100 study sessions! 🧠\",\n    },\n    // Completion of at least 100 study sessions and 200 tasks\n    {\n      image: \"../../assets/achievement-badges/gold-penguin.png\",\n      desc: \"Granted for completing at least 100 study sessions and 200 tasks! 🐧\",\n    },\n  ];\n\n  // current index will be max achievement a user as obtained\n  currentIndex = 0;\n\n  showPrevious() {\n    this.currentIndex =\n      this.currentIndex > 0\n        ? this.currentIndex - 1\n        : this.achievement_badges.length - 1;\n  }\n\n  showNext() {\n    this.currentIndex =\n      this.currentIndex < this.achievement_badges.length - 1\n        ? this.currentIndex + 1\n        : 0;\n  }\n\n  getPreviousIndex() {\n    return this.currentIndex > 0\n      ? this.currentIndex - 1\n      : this.achievement_badges.length - 1;\n  }\n\n  getNextIndex() {\n    return this.currentIndex < this.achievement_badges.length - 1\n      ? this.currentIndex + 1\n      : 0;\n  }\n}\n","<div>\n    <div class=\"carousel-container\">\n        <button class=\"carousel-button\" (click)=\"showPrevious()\">&lt;</button>\n\n        <div class=\"carousel-slide\">\n            <img\n                *ngIf=\"true\"\n                [src]=\"achievement_badges[getPreviousIndex()].image\"\n                class=\"previous\"\n            />\n            <img\n                [src]=\"achievement_badges[currentIndex].image\"\n                alt=\"Current badge\"\n                class=\"current\"\n            />\n            <img\n                *ngIf=\"true\"\n                [src]=\"achievement_badges[getNextIndex()].image\"\n                class=\"next\"\n            />\n        </div>\n        <button class=\"carousel-button\" (click)=\"showNext()\">&gt;</button>\n    </div>\n    <p class=\"desc\">{{achievement_badges[currentIndex].desc}}</p>\n</div>\n","import { Component, OnInit} from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent implements OnInit {\n\n  user: string = '';\n  logged_in: boolean = false;\n\n  constructor( private apiService: ApiService){}\n\n  ngOnInit() {\n    this.status()\n  }\n\n  status() {\n    const result = this.apiService.checkLogInStatus()\n    if(result[1]) {\n      this.user = result[0];\n      this.logged_in = result[1];\n    }\n  }\n}\n","<img routerLink=\"/\" class = \"logo\" src = \"../../assets/pomo_pengy_logo_dark.png\">\n<div *ngIf=\"!logged_in\">\n    <app-login-register-buttons></app-login-register-buttons>\n</div>\n<p *ngIf=\"logged_in\" class = \"welcome-message\">hello, {{ user }}!</p>\n<app-nav-bar></app-nav-bar>","import { Component} from '@angular/core';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class HomePageComponent {\n\n}\n","<app-header></app-header>\n<br>\n    <div class = \"components-left\" @fadeIn>\n        <app-time-date></app-time-date>\n        <app-session-button></app-session-button>\n    </div>\n    <div class = \"components-right\" @fadeIn>\n        <app-to-do></app-to-do>\n    </div>\n","import { Component} from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { LoginInterface } from '../login-interface';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\nimport { supervisor } from '../storage-supervisor.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class LoginPageComponent {\n\n  email: string = ''\n  password: string = ''\n\n  constructor( private apiService: ApiService, private router: Router) {\n\n  }\n\n  postToDB(){\n    const payload = {\n      email: this.email,\n      password: this.password\n    };\n    \n    this.apiService.sendLogin(payload)\n      .subscribe((response: LoginInterface) => {       \n        alert('Login Successful!');\n        // Set token expiry to 1 Day => Require Re-login\n        supervisor.setItem('username', response.username, 1440);\n        supervisor.setItem('token', response.accessToken, 1440);\n        this.router.navigate(['/']);\n      }, error => {\n        console.error('Error:', error);\n      });\n  }\n\n}\n","<img routerLink=\"/\" class = \"logo\" src = \"../../assets/pomo_pengy_logo_dark.png\">\n<div class=\"login-form\" @fadeIn>\n    <h1>login</h1>\n    <div class = \"form-input\">\n        <form>\n            <input type=\"text\" id=\"email\" placeholder=\"email\" name=\"email\" [(ngModel)]=\"email\"><br>\n            <input type=\"password\" id=\"password\" placeholder=\"password\" name=\"password\" [(ngModel)]=\"password\"><br>\n            <div class=\"submit-button\" (click)=\"postToDB()\">login</div>\n        </form>\n    </div>\n    <h4>don't have an account? <a routerLink=\"/register\">register</a></h4>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login-register-buttons',\n  templateUrl: './login-register-buttons.component.html',\n  styleUrl: './login-register-buttons.component.scss'\n})\nexport class LoginRegisterButtonsComponent {\n\n}\n","<div class = \"lr-buttons-container\">\n    <div routerLink=\"/login\" class = \"lr-buttons\">login</div>\n    <div routerLink=\"/register\" class = \"lr-buttons\">register</div>\n</div>","import { Component } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrl: './logout.component.scss'\n})\nexport class LogoutComponent {\n\n  constructor(private apiService: ApiService) {\n\n  }\n\n  sendLogout() {\n    this.apiService.logout();\n  }\n\n}\n","<div class = \"button-container\">\n    <div (click)=\"sendLogout()\"  routerLink=\"/\" class = \"logout\">logout</div>\n</div>\n","import { NgClass } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  icons = [\n    {link:\"/\", src:\"../../assets/nav-icons/home-icon.png\", title:\"Home\", class:\"icon\"},\n    {link:\"/pomo\", src:\"../../assets/nav-icons/timer-icon.png\", title:\"Pomodoro Timer\", class:\"icon right-icons\"},\n    // {link:\"/notes\", src:\"../../assets/nav-icons/note-icon.png\", title:\"Notes\", class:\"icon right-icons\"},\n    {link:\"/profile\", src:\"../../assets/nav-icons/user-icon.png\", title:\"Profile\", class:\"icon right-icons\"},\n  ]\n}\n","<div class =\"nav\">\n    <a *ngFor = \"let icon of icons\" routerLink={{icon.link}}><img src = {{icon.src}} title = {{icon.title}} class={{icon.class}}></a>\n</div>\n","import { Component } from '@angular/core';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-notes-page',\n  templateUrl: './notes-page.component.html',\n  styleUrls: ['./notes-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class NotesPageComponent {\n\n}\n","<app-header></app-header>\n<app-text-editor @fadeIn></app-text-editor>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-pomo-page',\n  templateUrl: './pomo-page.component.html',\n  styleUrls: ['./pomo-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class PomoPageComponent {\n\n}\n","<app-header></app-header>\n<app-timer @fadeIn></app-timer>\n","import { Component, OnInit } from '@angular/core';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.component.html',\n  styleUrl: './profile-page.component.scss',\n  animations: [fadeInAnimation]\n\n})\nexport class ProfilePageComponent implements OnInit{\n\n  logged_in: boolean = false;\n\n  constructor( private apiService: ApiService){}\n\n  ngOnInit() {\n    this.status()\n  }\n\n  status() {\n    const result = this.apiService.checkLogInStatus()\n    if(result[1]) {\n      this.logged_in = result[1];\n    }\n  }\n\n}\n","<app-header></app-header>\n<div *ngIf=\"!logged_in\" class = \"content not_login\" @fadeIn>\n    <h3><a routerLink=\"/register\">register</a> or <a routerLink=\"/login\">log in</a> to see personalized statistics and earn achievement badges!</h3>\n    <h2>or</h2>\n    <app-about-button></app-about-button>\n</div>\n<div *ngIf=\"logged_in\" class = \"content login\">\n    <div class = \"components-left\" @fadeIn>\n        <app-statistics></app-statistics>\n        <div class = \"profile-buttons\">\n            <app-logout></app-logout>\n            <app-about-button class = \"lower-button\"></app-about-button>\n        </div>\n    </div>\n    <div class = \"components-right\" @fadeIn>\n        <app-achievements></app-achievements>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class RegisterPageComponent {\n\n  username: string = ''\n  email: string = ''\n  password: string = ''\n\n  constructor( private apiService: ApiService, private router: Router) {\n\n  }\n\n  postToDB(){\n    const payload = {\n      email: this.email,\n      username: this.username,\n      password: this.password\n    };\n    \n    this.apiService.sendRegister(payload)\n      .subscribe(response => {\n        \n        alert('Registration Successful!');\n        this.router.navigate(['/login']);\n      }, error => {\n        console.error('Error:', error);\n      });\n  }\n\n\n\n}\n","<img routerLink=\"/\" class = \"logo\" src = \"../../assets/pomo_pengy_logo_dark.png\">\n<div class=\"register-form\" @fadeIn>\n    <h1>register</h1>\n    <div class = \"form-input\">\n        <form>\n            <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"email\" [(ngModel)]=\"email\"><br>\n            <input type=\"text\" id=\"username\" name =\"username\" placeholder=\"username\" [(ngModel)]=\"username\"><br>\n            <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"password\" [(ngModel)]=\"password\"><br>\n            <div class=\"submit-button\" (click)=\"postToDB()\">register</div>\n        </form>\n    </div>\n    <h4>have an account? <a routerLink=\"/login\">login</a></h4>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-session-button',\n  templateUrl: './session-button.component.html',\n  styleUrls: ['./session-button.component.scss']\n})\nexport class SessionButtonComponent {\n\n}\n","<div>\n    <div routerLink=\"/pomo\" class = \"start-session\">start a study session</div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-spotify-integration',\n  templateUrl: './spotify-integration.component.html',\n  styleUrls: ['./spotify-integration.component.scss']\n})\nexport class SpotifyIntegrationComponent {\n\n}\n","import { Component , OnInit} from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrl: './statistics.component.scss'\n})\nexport class StatisticsComponent implements OnInit {\n\n  constructor( private apiService:ApiService){\n\n  }\n\n  stats = {};\n\n  ngOnInit(){\n      this.getStats();\n      console.log(this.stats)\n  }\n\n  getStats() {\n    this.apiService.getUserStats()\n      .subscribe((response: any) => {  \n        if(response){\n          console.log(response)\n          this.stats = response;\n        }\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n\n}\n","<h2>study insight</h2>\n\n<div class = \"stats-container\">\n    <table>\n        <tr>\n            <th>statistic</th>\n            <th>value</th>\n        </tr>\n        <!-- Each row from here on is a statistic-->\n        <tr *ngFor=\"let item of stats | keyvalue\">\n            <td>{{item.key}}</td>\n            <td>{{item.value}}</td>\n        </tr>\n    </table>\n</div>","class StorageSupervisorService {\n  setItem(key: string, value: any, expiryInMinutes: number) {\n    const now = new Date();\n\n    const item = {\n      value: value,\n      expiry: now.getTime() + expiryInMinutes * 60 * 1000,\n    };\n\n    localStorage.setItem(key, JSON.stringify(item));\n  }\n\n  getItem(key: string): any | null {\n    const itemStr = localStorage.getItem(key);\n\n    if (!itemStr) {\n      return null;\n    }\n\n    const item = JSON.parse(itemStr);\n    const now = new Date();\n\n    if (now.getTime() > item.expiry) {\n      localStorage.removeItem(key);\n      return null;\n    }\n\n    return item['value'];\n  }\n\n  removeItem(key: string): void {\n    localStorage.removeItem(key);\n  }\n}\n\n// Export an instance of the service\nexport const supervisor = new StorageSupervisorService();","import { Injectable } from '@angular/core';\nimport { Task } from './task.model';\n\n// Service (Methods) that can can be used with the task model (interface) we defined.\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private tasks: Task[] = [];\n\n  getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  addTask(task: Task): void {\n    this.tasks.push(task);\n  }\n\n  removeTask(index: number): Task {\n    return this.tasks.splice(index, 1)[0];\n  }\n\n  clearTasks():void {\n    this.tasks = [];\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-text-editor',\n  templateUrl: './text-editor.component.html',\n  styleUrls: ['./text-editor.component.scss']\n})\nexport class TextEditorComponent {\n  markdownText: string = '';\n\n  fonts: string[] = ['Arial', 'Courier New', 'Georgia', 'Times New Roman', 'Verdana', 'Jua'];\n\n  // Default selected font\n  selectedFont: string = this.fonts[0];\n\n}\n","<div class=\"parent\">\n    <div class=\"child editor\">\n        <div>\n            <div class = \"toolbar\">\n                <label for=\"font-select\">Font: </label>\n                <select id=\"font-select\" [(ngModel)]=\"selectedFont\">\n                    <option *ngFor=\"let font of fonts\" [value]=\"font\">{{ font }}</option>\n                </select>\n            </div>\n        </div>\n      <textarea [(ngModel)]=\"markdownText\" placeholder=\"Enter Markdown text here...\"></textarea>\n    </div>\n    \n    <div class=\"child preview std-font\">\n      <markdown class = \"std-font\" [data]=\"markdownText\" [style.fontFamily]=\"selectedFont\" ngPreserveWhitespaces></markdown>\n    </div>\n  </div>","import { Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-time-date',\n  templateUrl: './time-date.component.html',\n  styleUrls: ['./time-date.component.scss']\n})\nexport class TimeDateComponent {\n  currentDateTime: Date;\n  public time: string;\n  public date: string;\n\n  constructor() {\n    this.currentDateTime = new Date();\n    this.time = this.formatTime(this.currentDateTime);\n    this.date = this.formatDate(this.currentDateTime);\n  }\n\n  ngOnInit(): void {\n    this.updateDateTime();\n    // Update the time every second\n    setInterval(() => this.updateDateTime(), 1000);\n  }\n\n  private formatTime(curDate: Date): string {\n    let hours = curDate.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n  \n    return (\n      this.padZero(hours) +\n      ':' +\n      this.padZero(curDate.getMinutes()) +\n      ' ' +\n      (curDate.getHours() >= 12 ? 'PM' : 'AM')\n    );\n  }\n  \n  private padZero(value: number): string {\n    return value < 10 ? '0' + value : '' + value;\n  }\n\n  private formatDate(curDate: Date): string {\n    const dOW = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    const mOY = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n    return dOW[curDate.getDay()] + \", \" + mOY[curDate.getMonth()] + \" \" +  curDate.getDate() + \", \" + curDate.getFullYear();\n  }\n\n  private updateDateTime(): void {\n    this.currentDateTime = new Date();\n    this.time = this.formatTime(this.currentDateTime);\n    this.date = this.formatDate(this.currentDateTime);\n  }\n}\n","<div>\n    <h1 class = \"time\">{{ time }}</h1>\n    <h3 class = \"date\">{{ date }}</h3>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n  minutes: number = 45; \n  seconds: number = 0;\n  entered: number = 45;\n\n  // used for pomodoro feature\n  sprint: number = 0;\n  break: number = 10;\n\n  isRunning: boolean = false;\n  interval: any;\n\n  callRestart: number = 0;\n\n  startTimer() {\n    if (this.callRestart !== 1) {\n      this.resetTimer();\n      this.callRestart = 1;\n    }\n    this.isRunning = true;\n    this.sprint++;\n    this.interval = setInterval(() => {\n      if (this.seconds > 0) {\n        this.seconds--;\n      } else if (this.entered > 0) {\n        this.entered--;\n        this.seconds = 59;\n      } else {\n        this.resetTimer();\n        this.callRestart = 0;\n        alert(\"The timer has ended!\");\n      }\n    }, 1000);\n  }\n\n  stopTimer() {\n    this.isRunning = false;\n    this.sprint--;\n    clearInterval(this.interval);\n  }\n\n  resetTimer() {\n    this.isRunning = false;\n    clearInterval(this.interval);\n\n    if (this.sprint % 2 === 1) {\n      this.entered = this.break;\n    } else {\n      this.entered = this.minutes;\n    }\n\n    this.seconds = 0;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TimerService } from '../timer.service';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss'],\n})\nexport class TimerComponent implements OnInit {\n  constructor(private timerService: TimerService) {}\n\n  displaySettings: boolean = false;\n\n  toggleSettings() {\n    this.displaySettings = !this.displaySettings;\n  }\n\n  ngOnInit() {\n    this.resetTimer();\n  }\n\n  startTimer() {\n    this.timerService.startTimer();\n  }\n\n  stopTimer() {\n    this.timerService.stopTimer();\n  }\n\n  resetTimer() {\n    this.timerService.resetTimer();\n  }\n\n  get minutes(): number {\n    return this.timerService.minutes;\n  }\n\n  get entered():number {\n    return this.timerService.entered;\n  }\n\n  get seconds(): number {\n    return this.timerService.seconds;\n  }\n\n  get isRunning(): boolean {\n    return this.timerService.isRunning;\n  }\n\n  get break(): number {\n    return this.timerService.break;\n  }\n\n  set minutes(min:number){\n    this.timerService.minutes = min;\n  }\n\n  set break(br:number){\n    this.timerService.break = br;\n  }\n\n}\n","<div class = \"timer-container\">\n    <div>\n        <h1>{{ entered | number: '2.0' }} min {{ seconds | number: '2.0' }} s</h1>\n    </div>\n    <div class=\"timer-controller\">\n        <div>\n            <button (click)=\"startTimer()\" [disabled]=\"isRunning\" class=\"timer-buttons\">start</button>\n            <button (click)=\"stopTimer()\" [disabled]=\"!isRunning\" class=\"timer-buttons\">stop</button>\n            <button (click)=\"resetTimer()\" class=\"timer-buttons\">reset</button>\n            <br>\n            <button (click)=\"toggleSettings()\" class = \"toggle\" [style.display]=\"displaySettings ? 'none': 'block'\">&#8964;</button>\n        </div>\n        <div [style.display]=\"displaySettings ? 'block' : 'none'\">\n            <p>To use the Pomodoro Timer, set your preferred study and break intervals. These intervals will alternate, helping you maximize your study time. We provided some commonly used default values.</p>\n            <label for=\"minutes\">study interval:</label>\n            <input type=\"number\" id=\"minutes\" [(ngModel)]=\"minutes\" min=\"1\" class =\"timer-input\">\n            <br>\n            <label for=\"minutes\">break interval:</label>\n            <input type=\"number\" id=\"minutes\" [(ngModel)]=\"break\" min=\"1\" class =\"timer-input\">\n            <br>\n            <button (click)=\"toggleSettings()\" class = \"toggle inner\">&#8963;</button>\n        </div>\n    </div>\n</div>\n","import { Component, ElementRef, OnInit, OnDestroy, Renderer2 } from '@angular/core';\nimport { Task } from '../task.model';\nimport { TaskService } from '../task.service';\nimport { ApiService } from '../api.service';\nimport { TaskItem } from '../task-item';\n\n@Component({\n  selector: 'app-to-do',\n  templateUrl: './to-do.component.html',\n  styleUrls: ['./to-do.component.scss']\n})\nexport class ToDoComponent implements OnInit, OnDestroy {\n  tasks: Task[] = [];\n  newTask: Task = { title: '', dueDate: new Date(), include: false,};\n\n  displayInfo:boolean = true;\n\n  constructor(private apiService: ApiService, private taskService: TaskService, private el: ElementRef, private renderer: Renderer2) {\n    \n  }\n\n  ngOnInit(): void {\n    this.getFromDB();\n    this.tasks = this.taskService.getTasks();\n  }\n\n  ngOnDestroy(): void {\n    const status_arr:any[] = this.apiService.checkLogInStatus();\n    // Clear the to do list if the user is logged in (avoid double printing)\n    if(status_arr[1]){\n      this.taskService.clearTasks()\n    }\n  }\n\n  toggleInfo(){\n    this.displayInfo = !this.displayInfo\n  }\n\n  addTask(): void {\n    if (!this.newTask.title.trim()) {\n      // You can show an error message or handle it as needed\n      alert('Please enter a task title!');\n      return;\n    }\n\n    // store the task in the DB to be retrieved when re-entering the site\n    this.postToDB()\n\n    this.taskService.addTask(this.newTask);\n    this.newTask = { title: '', dueDate: new Date(), include: false};\n\n    const container = this.el.nativeElement.querySelector('.temp-container');\n    this.renderer.setStyle(container, \"display\", \"none\");\n\n    const add_button = this.el.nativeElement.querySelector('.task-add-button');\n    this.renderer.setStyle(add_button, \"display\", \"block\");\n  }\n\n  removeTask(index: number): void {\n    const removed:Task = this.taskService.removeTask(index);\n    console.log(removed.title);\n    this.removeFromDB(removed.title);\n  }\n\n  displayForm(): void{\n    const container = this.el.nativeElement.querySelector('.temp-container');\n    this.renderer.setStyle(container, \"display\", \"block\");\n\n    const add_button = this.el.nativeElement.querySelector('.task-add-button');\n    this.renderer.setStyle(add_button, \"display\", \"none\");\n  }\n\n  parseTaskData(response: TaskItem[]) {\n    for(let i of response){\n      const task: Task = {title: i['title'], dueDate: new Date(i['dueDate']), include: i['include']};\n      this.taskService.addTask(task);\n    }\n  }\n\n  getFromDB() {\n    this.apiService.getTasks()\n      .subscribe((response: any) => {  \n        if(response){\n          this.parseTaskData(response);\n        }\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n\n  postToDB(){\n    const payload = {\n      title: this.newTask.title,\n      dueDate: this.newTask.dueDate,\n      include: this.newTask.include\n    };\n    \n    this.apiService.sendTask(payload)\n      .subscribe((response: any) => {  \n          null;\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n\n  removeFromDB(title: string){\n    const payload = {\n      title: title\n    };\n    \n    this.apiService.removeTask(payload)\n      .subscribe((response: any) => {  \n          null;\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n}\n","<div class = \"list-container\">\n    <h2 class = \"to-do-header\">\n        your tasks \n        <a (click)=\"toggleInfo()\" [style.display]=\"displayInfo ? 'none' : 'inline'\" class = \"toggle\">˅</a>\n        <a (click)=\"toggleInfo()\" [style.display]=\"displayInfo ? 'inline' : 'none'\"class = \"toggle\">˄</a>\n    </h2>\n    <div [style.display]=\"displayInfo ? 'block' : 'none'\">\n        <p class=\"container-info\">Here is where you can organize your tasks. To add a new task, press the \"+\" button and fill out the form. Check the box if you want to include a due date for your task.</p>\n    </div>\n    <div class = \"task-container\">\n        <ul>\n            <li *ngFor=\"let task of tasks; let i = index\">\n                <div class = \"task-item\">\n                    <p class = \"task-title\">{{ task.title }}</p>\n                    <br>\n                    <p *ngIf=\"task.include\" class = \"task-date\">due on {{ task.dueDate | date:'medium' }}</p>\n                    <br>\n                    <button class = \"submit\" (click)=\"removeTask(i)\">remove</button>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class = \"task-add-button\" (click)=\"displayForm()\">\n        <h2>+</h2>\n    </div>\n    <div class = \"temp-container task-item\" style=\"display: none;\">\n        <label for=\"title\">task</label>\n        <br>\n        <!-- Ignore the errors -->\n        <input class = \"user-vals\" type=\"text\" id=\"title\" [(ngModel)]=\"newTask.title\" required/>\n        <br>\n        <label for=\"date\">due date (optional)</label><input type =\"checkbox\" [(ngModel)]=\"newTask.include\">\n        <br>\n        <!-- Ignore the errors -->\n        <input class = \"user-vals\" type=\"datetime-local\" id=\"date\" [(ngModel)]=\"newTask.dueDate\" />\n        <br>\n        <button class = \"submit\" (click)=\"addTask()\">add task</button>\n    </div>\n</div>\n","import { trigger, transition, style, animate } from '@angular/animations';\n\nexport const loadInAnimation = trigger('loadIn', [\n    transition(':enter', [\n      style({ opacity: 0 }),\n      animate('2s', style({ opacity: 1 }))\n    ])\n  ]);\n\nexport const fadeInAnimation = trigger('fadeIn', [\n  transition(':enter', [\n    style({ opacity: 0 }),\n    animate('1.5s', style({ opacity: 1 }))\n  ]),\n  transition(':leave', [\n    animate('1.5s', style({ opacity: 0 }))\n  ])\n]);","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AboutButtonComponent","_","_2","selectors","decls","vars","consts","template","AboutButtonComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","fadeInAnimation","AboutComponent","ngOnInit","document","body","classList","add","ngOnDestroy","remove","AboutComponent_Template","ɵɵelement","ɵɵproperty","undefined","AchievementsComponent","constructor","displayInfo","achievements_temp","cur","getRandomInt","toggleInfo","max","Math","floor","random","AchievementsComponent_Template","ɵɵlistener","AchievementsComponent_Template_a_click_4_listener","AchievementsComponent_Template_a_click_6_listener","ɵɵadvance","ɵɵstyleProp","ɵɵtextInterpolate","HttpHeaders","HttpParams","Observable","supervisor","ApiService","http","sendRegister","data","post","sendLogin","sendTask","token","getItem","headers","authorization","getTasks","console","log","get","removeTask","params","set","title","delete","getUserStats","logout","removeItem","checkLogInStatus","user","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","RouterModule","HomePageComponent","PomoPageComponent","RegisterPageComponent","LoginPageComponent","NotesPageComponent","ProfilePageComponent","routes","path","component","AppRoutingModule","_3","forRoot","imports","exports","loadInAnimation","AppComponent","AppComponent_Template","BrowserModule","BrowserAnimationsModule","FormsModule","TimeDateComponent","SessionButtonComponent","NavBarComponent","ToDoComponent","TimerComponent","SpotifyIntegrationComponent","TextEditorComponent","LoginRegisterButtonsComponent","HeaderComponent","MarkdownModule","HttpClientModule","StatisticsComponent","CarouselComponent","LogoutComponent","AppModule","bootstrap","forChild","loader","declarations","ctx_r0","achievement_badges","getPreviousIndex","image","ɵɵsanitizeUrl","ctx_r1","getNextIndex","desc","currentIndex","showPrevious","length","showNext","CarouselComponent_Template","CarouselComponent_Template_button_click_2_listener","ɵɵtemplate","CarouselComponent_img_5_Template","CarouselComponent_img_7_Template","CarouselComponent_Template_button_click_8_listener","ɵɵtextInterpolate1","apiService","logged_in","status","result","ɵɵdirectiveInject","HeaderComponent_Template","HeaderComponent_div_1_Template","HeaderComponent_p_2_Template","HomePageComponent_Template","router","email","password","postToDB","payload","subscribe","response","alert","setItem","username","accessToken","navigate","error","i2","Router","LoginPageComponent_Template","ɵɵtwoWayListener","LoginPageComponent_Template_input_ngModelChange_6_listener","$event","ɵɵtwoWayBindingSet","LoginPageComponent_Template_input_ngModelChange_8_listener","LoginPageComponent_Template_div_click_10_listener","ɵɵtwoWayProperty","LoginRegisterButtonsComponent_Template","sendLogout","LogoutComponent_Template","LogoutComponent_Template_div_click_1_listener","ɵɵpropertyInterpolate","icon_r1","link","ɵɵclassMap","class","src","icons","NavBarComponent_Template","NavBarComponent_a_1_Template","NotesPageComponent_Template","PomoPageComponent_Template","ProfilePageComponent_Template","ProfilePageComponent_div_1_Template","ProfilePageComponent_div_2_Template","RegisterPageComponent_Template","RegisterPageComponent_Template_input_ngModelChange_6_listener","RegisterPageComponent_Template_input_ngModelChange_8_listener","RegisterPageComponent_Template_input_ngModelChange_10_listener","RegisterPageComponent_Template_div_click_12_listener","SessionButtonComponent_Template","SpotifyIntegrationComponent_Template","styles","item_r1","key","value","stats","getStats","StatisticsComponent_Template","StatisticsComponent_tr_9_Template","ɵɵpipeBind1","StorageSupervisorService","expiryInMinutes","now","Date","item","expiry","getTime","localStorage","JSON","stringify","itemStr","parse","TaskService","tasks","addTask","task","push","index","splice","clearTasks","font_r1","markdownText","fonts","selectedFont","TextEditorComponent_Template","TextEditorComponent_Template_select_ngModelChange_6_listener","TextEditorComponent_option_7_Template","TextEditorComponent_Template_textarea_ngModelChange_8_listener","currentDateTime","time","formatTime","date","formatDate","updateDateTime","setInterval","curDate","hours","getHours","padZero","getMinutes","dOW","mOY","getDay","getMonth","getDate","getFullYear","TimeDateComponent_Template","TimerService","minutes","seconds","entered","sprint","break","isRunning","callRestart","startTimer","resetTimer","interval","stopTimer","clearInterval","timerService","displaySettings","toggleSettings","min","br","TimerComponent_Template","TimerComponent_Template_button_click_8_listener","TimerComponent_Template_button_click_10_listener","TimerComponent_Template_button_click_12_listener","TimerComponent_Template_button_click_15_listener","TimerComponent_Template_input_ngModelChange_22_listener","TimerComponent_Template_input_ngModelChange_26_listener","TimerComponent_Template_button_click_28_listener","ɵɵtextInterpolate2","ɵɵpipeBind2","task_r1","dueDate","ToDoComponent_li_12_p_5_Template","ToDoComponent_li_12_Template_button_click_7_listener","restoredCtx","ɵɵrestoreView","_r6","i_r2","ctx_r5","ɵɵnextContext","ɵɵresetView","include","taskService","el","renderer","newTask","getFromDB","status_arr","trim","container","nativeElement","querySelector","setStyle","add_button","removed","removeFromDB","displayForm","parseTaskData","i","ElementRef","Renderer2","ToDoComponent_Template","ToDoComponent_Template_a_click_3_listener","ToDoComponent_Template_a_click_5_listener","ToDoComponent_li_12_Template","ToDoComponent_Template_div_click_13_listener","ToDoComponent_Template_input_ngModelChange_20_listener","ToDoComponent_Template_input_ngModelChange_24_listener","ToDoComponent_Template_input_ngModelChange_26_listener","ToDoComponent_Template_button_click_28_listener","trigger","transition","style","animate","opacity","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}