{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/about-button/about-button.component.ts","./src/app/about-button/about-button.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/achievements/achievements.component.ts","./src/app/achievements/achievements.component.html","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/carousel/carousel.component.ts","./src/app/carousel/carousel.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/login-register-buttons/login-register-buttons.component.ts","./src/app/login-register-buttons/login-register-buttons.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/notes-page/notes-page.component.ts","./src/app/notes-page/notes-page.component.html","./src/app/pomo-page/pomo-page.component.ts","./src/app/pomo-page/pomo-page.component.html","./src/app/profile-page/profile-page.component.ts","./src/app/profile-page/profile-page.component.html","./src/app/register-page/register-page.component.ts","./src/app/register-page/register-page.component.html","./src/app/session-button/session-button.component.ts","./src/app/session-button/session-button.component.html","./src/app/spotify-integration/spotify-integration.component.ts","./src/app/statistics/statistics.component.ts","./src/app/statistics/statistics.component.html","./src/app/storage-supervisor.service.ts","./src/app/task.service.ts","./src/app/text-editor/text-editor.component.ts","./src/app/text-editor/text-editor.component.html","./src/app/time-date/time-date.component.ts","./src/app/time-date/time-date.component.html","./src/app/timer.service.ts","./src/app/timer/timer.component.ts","./src/app/timer/timer.component.html","./src/app/to-do/to-do.component.ts","./src/app/to-do/to-do.component.html","./src/assets/animations/animations.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about-button',\n  templateUrl: './about-button.component.html',\n  styleUrl: './about-button.component.scss'\n})\nexport class AboutButtonComponent {\n\n}\n","<div>\n    <div routerLink=\"/about-pomo-pengy\" class = \"about-button\">learn more about pomopengy</div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrl: './about.component.scss',\n  animations: [fadeInAnimation],\n})\nexport class AboutComponent implements OnInit, OnDestroy{\n\n  ngOnInit() {\n    document.body.classList.add('about-body');\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove('about-body');\n  }\n\n}\n","<div @fadeIn>\n    <div class = \"header\">\n        <a routerLink=\"/\"><img src = \"../../assets/pomo_pengy_logo_light.png\" class=\"logo\"></a>\n        <a routerLink=\"/\"><p class=\"right-item\">< back to the site</p></a>\n    </div>\n    \n    <div class = \"content\">\n        <h3>what is pomopengy?</h3>\n        <p>pomopengy is a multi-feature productivity application designed for students by students. we aimed to incentivize task completion through earning achievements and badges.</p>\n        <p>our inspiration came from video games, such as valorant or league of legends, that give users a rank based on their performance and gives them rewards based on the amount of time/effort put towards the game.</p>\n    \n        <h3>our team</h3>\n        <div class = \"bio\">\n            <img src = \"../../assets/about-images/ethan-headshot.png\" class = \"headshot\">\n            <div class = \"info\">\n                <a href = \"https://ethanlphan.com\">Ethan Phan</a>\n                <p>visionary, lead developer</p>\n                <p>B.S. Computer Science, University at Buffalo</p>\n            </div>\n        </div>\n        <div class = \"bio\">\n            <div class = \"info\">\n                <a href = \"https://savina-chan.github.io\">Savina Chan</a>\n                <p>lead developer, asset procurer</p>\n                <p>B.A. Computer Science, New York University</p>\n            </div>\n            <img src = \"../../assets/about-images/savina-headshot.jpg\" class = \"headshot right\">\n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit} from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-achievements',\n  templateUrl: './achievements.component.html',\n  styleUrl: './achievements.component.scss'\n})\nexport class AchievementsComponent implements OnInit{\n  displayInfo: boolean = false;\n  cur: string = \"\";\n\n  constructor( private apiService: ApiService) {}\n\n  ngOnInit(): void {\n      this.getStats();\n  }\n\n  toggleInfo() {\n    this.displayInfo = !this.displayInfo\n  }\n\n  /* ------------------ TEMPORARY CODE ------------------ */\n  // achievements_temp = [\n  //   \"Rookie Pengy\",\n  //   \"Apprentice Pengy\",\n  //   \"Junior Pengy Analyst\",\n  //   \"Associate Pengy\",\n  //   \"Pengy Analyst\",\n  //   \"Pengy Fellow\",\n  //   \"Pengy Researcher\",\n  //   \"Erudite Pengy\",\n  //   \"Luminary Pengy\",\n  //   \"Master Pengy\",\n  //   \"Doctor Pengy\",\n  //   \"Enlightened Pengy\"\n  // ]\n\n  // getRandomInt(max: number) {\n  //   return Math.floor(Math.random() * max);\n  // }\n\n  getStats() {\n    this.apiService.getUserRank()\n      .subscribe((response: any) => {  \n        if(response){\n          this.cur = response.cur;\n        }\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n}\n","<div class=\"levels-container\">\n    <div class = \"upper\">\n        <h2>study level\n            <a (click)=\"toggleInfo()\" [style.display]=\"displayInfo ? 'none' : 'inline'\" class = \"toggle\">˅</a>\n            <a (click)=\"toggleInfo()\" [style.display]=\"displayInfo ? 'inline' : 'none'\"class = \"toggle\">˄</a>\n        </h2>\n        <div [style.display]=\"displayInfo ? 'block' : 'none'\">\n            <p class=\"container-info\">inspired by the ranking feature in modern games, Pomo Pengy allows you to climb to higher ranks on the pyramid of pengy knowledge. The more hours of studying you put in, the higher your rank grows!</p>\n        </div>\n        <div class = \"center-all\">\n            <h1>{{cur}}</h1>\n        </div>\n    </div>\n    <div class = \"lower\">\n        <h2>achievements</h2>\n        <app-carousel></app-carousel>\n    </div>\n</div>","import { Injectable } from \"@angular/core\";\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpParams,\n} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { LoginInterface } from \"./login-interface\";\n\nimport { supervisor } from \"./storage-supervisor.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ApiService {\n  constructor(private http: HttpClient) {}\n\n  url: string = \"https://seashell-app-uarvh.ondigitalocean.app/\"; // http://localhost:8080/\n\n  sendRegister(data: { username: string; email: string; password: string }) {\n    return this.http.post(`${this.url}api/register`, data);\n  }\n\n  sendLogin(data: { email: string; password: string }) {\n    return this.http.post<LoginInterface>(\n      \"${this.url}api/login\",\n      data,\n    );\n  }\n\n  sendTask(data: { title: string; dueDate: Date; include: boolean }) {\n    const token = supervisor.getItem(\"token\");\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      return this.http.post(`${this.url}api/postTask`, data, {\n        headers,\n      });\n    }\n    // return an empty object\n    return new Observable<Object>();\n  }\n\n  getTasks() {\n    const token = supervisor.getItem(\"token\");\n    console.log(token);\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      return this.http.get(`${this.url}api/getTasks`, { headers });\n    }\n    // return an empty object\n    return new Observable<Object>();\n  }\n\n  removeTask(data: { title: string }) {\n    const token = supervisor.getItem(\"token\");\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      const params = new HttpParams().set(\"title\", data.title);\n      return this.http.delete(`${this.url}api/removeTask`, {\n        headers,\n        params,\n      });\n    }\n    // return an empty object\n    return new Observable<Object>();\n  }\n\n  patchTask(data: object) {\n    const token = supervisor.getItem(\"token\");\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      return this.http.patch(`${this.url}api/patchTask`, data, {\n        headers,\n      });\n    }\n    // return an empty object\n    return new Observable<Object>();\n  }\n\n  getUserStats() {\n    const token = supervisor.getItem(\"token\");\n    console.log(token);\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      return this.http.get(`${this.url}api/sendStats`, { headers });\n    }\n    return new Observable<Object>();\n  }\n\n  sendSession(data: { sessionTime: number}) {\n    const token = supervisor.getItem(\"token\");\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      return this.http.post(`${this.url}api/endSession`, data, {\n        headers,\n      });\n    }\n    // return an empty object\n    return new Observable<Object>();\n  }\n\n  getUserRank() {\n    const token = supervisor.getItem(\"token\");\n    console.log(token);\n    if (token) {\n      const headers = new HttpHeaders({\n        authorization: token,\n      });\n      return this.http.get(`${this.url}api/getRanking`, { headers });\n    }\n    return new Observable<Object>();\n  }\n\n\n  logout() {\n    supervisor.removeItem(\"username\");\n    supervisor.removeItem(\"token\");\n  }\n\n  checkLogInStatus() {\n    const user = supervisor.getItem('username');\n    const token = supervisor.getItem('token');\n    if(user && token) {\n      return [user, token]\n    }\n    return []\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { PomoPageComponent } from './pomo-page/pomo-page.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { NotesPageComponent } from './notes-page/notes-page.component';\nimport { ProfilePageComponent } from './profile-page/profile-page.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  {path:\"\", component:HomePageComponent},\n  {path:\"pomo\", component:PomoPageComponent},\n  {path:\"notes\", component:NotesPageComponent},\n  {path:\"register\", component:RegisterPageComponent},\n  {path:\"login\", component:LoginPageComponent},\n  {path:\"profile\", component: ProfilePageComponent},\n  {path: \"about-pomo-pengy\", component: AboutComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { loadInAnimation} from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [loadInAnimation]\n})\nexport class AppComponent {\n  title = 'pengy-portal-frontend';\n}\n","<div @loadIn>\n    <router-outlet ></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TimeDateComponent } from './time-date/time-date.component';\nimport { SessionButtonComponent } from './session-button/session-button.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { ToDoComponent } from './to-do/to-do.component';\nimport { PomoPageComponent } from './pomo-page/pomo-page.component';\nimport { TimerComponent } from './timer/timer.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { NotesPageComponent } from './notes-page/notes-page.component';\nimport { SpotifyIntegrationComponent } from './spotify-integration/spotify-integration.component';\nimport { TextEditorComponent } from './text-editor/text-editor.component';\nimport { LoginRegisterButtonsComponent } from './login-register-buttons/login-register-buttons.component';\nimport { HeaderComponent } from './header/header.component';\n\nimport { MarkdownModule } from 'ngx-markdown';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ApiService } from './api.service';\nimport { ProfilePageComponent } from './profile-page/profile-page.component';\nimport { AchievementsComponent } from './achievements/achievements.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { CarouselComponent } from './carousel/carousel.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AboutComponent } from './about/about.component';\nimport { AboutButtonComponent } from './about-button/about-button.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TimeDateComponent,\n    SessionButtonComponent,\n    NavBarComponent,\n    HomePageComponent,\n    ToDoComponent,\n    PomoPageComponent,\n    TimerComponent,\n    LoginPageComponent,\n    RegisterPageComponent,\n    NotesPageComponent,\n    SpotifyIntegrationComponent,\n    TextEditorComponent,\n    LoginRegisterButtonsComponent,\n    HeaderComponent,\n    ProfilePageComponent,\n    AchievementsComponent,\n    StatisticsComponent,\n    CarouselComponent,\n    LogoutComponent,\n    AboutComponent,\n    AboutButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MarkdownModule.forRoot(),\n    MarkdownModule.forChild(),\n    HttpClientModule,\n    MarkdownModule.forRoot({ loader: HttpClient }),\n  ],\n  providers: [\n    ApiService\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { ApiService } from \"../api.service\";\n\n@Component({\n  selector: \"app-carousel\",\n  templateUrl: \"./carousel.component.html\",\n  styleUrl: \"./carousel.component.scss\",\n})\nexport class CarouselComponent implements OnInit{\n  achievement_badges = [\n    // Completion of first study session\n    {\n      image: \"../../assets/achievement-badges/bronze-plain.png\",\n      desc: \"Earned for the completion of your first study session!🎖️\",\n      status: \"inactive\"\n    },\n    // Completion of first task\n    {\n      image: \"../../assets/achievement-badges/bronze-lightning.png\",\n      desc: \"Awarded for completing your first task! ⚡\",\n      status: \"inactive\"\n    },\n    // Completion of 5 tasks\n    {\n      image: \"../../assets/achievement-badges/bronze-star.png\",\n      desc: \"Achieved by completing 5 tasks. ⭐\",\n      status: \"inactive\"\n    },\n    // Completion of 90 minutes of studying\n    {\n      image: \"../../assets/achievement-badges/bronze-clock.png\",\n      desc: \"Granted for completing 90 minutes of study time. ⏰\",\n      status: \"inactive\"\n    },\n    // Completion of 5 study sessions\n    {\n      image: \"../../assets/achievement-badges/bronze-book.png\",\n      desc: \"Earned for completing 5 study sessions. 📚\",\n      status: \"inactive\"\n    },\n    // Completion of 10 study sessions\n    {\n      image: \"../../assets/achievement-badges/bronze-brain.png\",\n      desc: \"Awarded for completing 10 study sessions. 🧠\",\n      status: \"inactive\"\n    },\n    // Completion of at least 10 study sessions and 10 tasks\n    {\n      image: \"../../assets/achievement-badges/bronze-penguin.png\",\n      desc: \"Granted for completing at least 10 study sessions and 10 tasks! 🐧\",\n      status: \"inactive\"\n    },\n    // Completion of 15 study sessions\n    {\n      image: \"../../assets/achievement-badges/silver-plain.png\",\n      desc: \"Achieved by completing 15 study sessions! 🎉\",\n      status: \"inactive\"\n    },\n    // Completion of 15 tasks\n    {\n      image: \"../../assets/achievement-badges/silver-star.png\",\n      desc: \"Awarded for completing 15 tasks! 🌟\",\n      status: \"inactive\"\n    },\n    // Completion of 750 minutes of studying\n    {\n      image: \"../../assets/achievement-badges/silver-clock.png\",\n      desc: \"Granted for completing 750 minutes of study time! ⏱️\",\n      status: \"inactive\"\n    },\n    // Completion of 20 study sessions\n    {\n      image: \"../../assets/achievement-badges/silver-book.png\",\n      desc: \"Earned for completing 20 study sessions! 📖\",\n      status: \"inactive\"\n    },\n    // Completion of 25 study sessions\n    {\n      image: \"../../assets/achievement-badges/silver-brain.png\",\n      desc: \"Awarded for completing 25 study sessions! 🧠\",\n      status: \"inactive\"\n    },\n    // Completion of at least 25 study sessions and 25 tasks\n    {\n      image: \"../../assets/achievement-badges/silver-penguin.png\",\n      desc: \"Granted for completing at least 25 study sessions and 25 tasks! 🐧\",\n      status: \"inactive\"\n    },\n    // Completion of 50 tasks\n    {\n      image: \"../../assets/achievement-badges/gold-plain.png\",\n      desc: \"Achieved by completing 50 tasks! 🎖️\",\n      status: \"inactive\"\n    },\n    // Completion of 50 study sessions\n    {\n      image: \"../../assets/achievement-badges/gold-lightning.png\",\n      desc: \"Awarded for completing 50 study sessions! ⚡\",\n      status: \"inactive\"\n    },\n    // Completion of 75 tasks\n    {\n      image: \"../../assets/achievement-badges/gold-star.png\",\n      desc: \"Granted for completing 75 tasks! 🌟\",\n      status: \"inactive\"\n    },\n    // Completion of 75 study sessions\n    {\n      image: \"../../assets/achievement-badges/gold-clock.png\",\n      desc: \"Earned for completing 75 study sessions! ⏰\",\n      status: \"inactive\"\n    },\n    // Completion of 100 tasks\n    {\n      image: \"../../assets/achievement-badges/gold-book.png\",\n      desc: \"Achieved by completing 100 tasks! 📘\",\n      status: \"inactive\"\n    },\n    // Completion of 100 study sessions\n    {\n      image: \"../../assets/achievement-badges/gold-brain.png\",\n      desc: \"Awarded for completing 100 study sessions! 🧠\",\n      status: \"inactive\"\n    },\n    // Completion of at least 100 study sessions and 200 tasks\n    {\n      image: \"../../assets/achievement-badges/gold-penguin.png\",\n      desc: \"Granted for completing at least 100 study sessions and 200 tasks! 🐧\",\n      status: \"inactive\"\n    },\n  ];\n\n  stats = {}\n\n  constructor(private apiService: ApiService){}\n\n  ngOnInit() {\n      this.getStats();\n  }\n\n  getStats() {\n    this.apiService.getUserStats()\n      .subscribe((response: any) => {  \n        if(response){\n          this.setStatus(response);\n          this.stats = response;\n        }\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n\n  setStatus(statistics: any) {\n    const timeStudy = statistics[\"study time\"];\n    const sessions = statistics[\"number of sessions completed\"];\n    const numTask = statistics[\"number of completed tasks\"];\n    if(sessions >= 1){\n      this.achievement_badges[0].status = \"active\"\n    }\n    if(numTask >= 1){\n      this.achievement_badges[1].status = \"active\"\n    }\n    if(numTask >= 5){\n      this.achievement_badges[2].status = \"active\"\n    }\n    if(timeStudy >= 90){\n      this.achievement_badges[3].status = \"active\"\n    }\n    if(sessions >= 5){\n      this.achievement_badges[4].status = \"active\"\n    }\n    if(sessions >= 10){\n      this.achievement_badges[5].status = \"active\"\n    }\n    if(sessions >= 10 && numTask >= 10){\n      this.achievement_badges[6].status = \"active\"\n    }\n    if(sessions >= 15){\n      this.achievement_badges[7].status = \"active\"\n    }\n    if(numTask >= 15){\n      this.achievement_badges[8].status = \"active\"\n    }\n    if(timeStudy >= 750){\n      this.achievement_badges[9].status = \"active\"\n    }\n    if(sessions >= 20){\n      this.achievement_badges[10].status = \"active\"\n    }\n    if(sessions >= 25){\n      this.achievement_badges[11].status = \"active\"\n    }\n    if(sessions >= 25 && numTask >= 25){\n      this.achievement_badges[12].status = \"active\"\n    }\n    if(numTask >= 50){\n      this.achievement_badges[13].status = \"active\"\n    }\n    if(sessions >= 50){\n      this.achievement_badges[14].status = \"active\"\n    }\n    if(numTask >= 75){\n      this.achievement_badges[15].status = \"active\"\n    }\n    if(sessions >= 75){\n      this.achievement_badges[16].status = \"active\"\n    }\n    if(numTask >= 100){\n      this.achievement_badges[17].status = \"active\"\n    }\n    if(sessions >= 100){\n      this.achievement_badges[18].status = \"active\"\n    }\n    if(numTask >= 200 && sessions >= 100){\n      this.achievement_badges[19].status = \"active\"\n    }\n  }\n\n  // current index will be max achievement a user as obtained\n  currentIndex = 0;\n\n  showPrevious() {\n    this.currentIndex =\n      this.currentIndex > 0\n        ? this.currentIndex - 1\n        : this.achievement_badges.length - 1;\n  }\n\n  showNext() {\n    this.currentIndex =\n      this.currentIndex < this.achievement_badges.length - 1\n        ? this.currentIndex + 1\n        : 0;\n  }\n\n  getPreviousIndex() {\n    return this.currentIndex > 0\n      ? this.currentIndex - 1\n      : this.achievement_badges.length - 1;\n  }\n\n  getNextIndex() {\n    return this.currentIndex < this.achievement_badges.length - 1\n      ? this.currentIndex + 1\n      : 0;\n  }\n}\n","<div>\n    <div class=\"carousel-container\">\n        <button class=\"carousel-button\" (click)=\"showPrevious()\">&lt;</button>\n\n        <div class=\"carousel-slide\">\n            <img\n                *ngIf=\"true\"\n                [src]=\"achievement_badges[getPreviousIndex()].image\"\n                class=\"previous\"\n            />\n            <img\n                [src]=\"achievement_badges[currentIndex].image\"\n                alt=\"Current badge\"\n                [ngClass]=\"[achievement_badges[currentIndex].status]\"\n            />\n            <img\n                *ngIf=\"true\"\n                [src]=\"achievement_badges[getNextIndex()].image\"\n                class=\"next\"\n            />\n        </div>\n        <button class=\"carousel-button\" (click)=\"showNext()\">&gt;</button>\n    </div>\n    <p class=\"desc\">{{achievement_badges[currentIndex].desc}}</p>\n</div>\n","import { Component, OnInit} from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent implements OnInit {\n\n  user: string = '';\n  logged_in: boolean = false;\n\n  constructor( private apiService: ApiService){}\n\n  ngOnInit() {\n    this.status()\n  }\n\n  status() {\n    const result = this.apiService.checkLogInStatus()\n    if(result[1]) {\n      this.user = result[0];\n      this.logged_in = result[1];\n    }\n  }\n}\n","<img routerLink=\"/\" class = \"logo\" src = \"../../assets/pomo_pengy_logo_dark.png\">\n<div *ngIf=\"!logged_in\">\n    <app-login-register-buttons></app-login-register-buttons>\n</div>\n<p *ngIf=\"logged_in\" class = \"welcome-message\">hello, {{ user }}!</p>\n<app-nav-bar></app-nav-bar>","import { Component} from '@angular/core';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class HomePageComponent {\n\n}\n","<app-header></app-header>\n<br>\n    <div class = \"components-left\" @fadeIn>\n        <app-time-date></app-time-date>\n        <app-session-button></app-session-button>\n    </div>\n    <div class = \"components-right\" @fadeIn>\n        <app-to-do></app-to-do>\n    </div>\n","import { Component} from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginInterface } from '../login-interface';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\nimport { supervisor } from '../storage-supervisor.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class LoginPageComponent {\n\n  formLogin = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(8)])\n  });\n\n\n  failedLogin = false;\n  emptyLogin = false;\n\n  constructor( private apiService: ApiService, private router: Router) {\n\n  }\n\n  get email() {\n    return this.formLogin.get('email');\n  }\n\n  get password() {\n    return this.formLogin.get('password');\n  }\n\n  getEmail() {\n    return this.formLogin.get('email')?.value || '';\n  }\n\n  getPassword() {\n    return this.formLogin.get('password')?.value || '';\n  }\n\n  postToDB(event: Event){\n\n    event.preventDefault();\n\n    if (this.formLogin.invalid) {\n      this.emptyLogin = true;\n    }\n    else {\n\n      this.emptyLogin = false;\n\n      const payload = {\n        email: this.getEmail(),\n        password: this.getPassword()\n      };\n      \n      this.apiService.sendLogin(payload)\n        .subscribe((response: LoginInterface) => {       \n          // Set token expiry to 1 Day => Require Re-login\n          supervisor.setItem('username', response.username, 1440);\n          supervisor.setItem('token', response.accessToken, 1440);\n          this.router.navigate(['/']);\n        }, error => {\n          this.failedLogin = true;\n      });\n    }\n  }   \n}\n\n","<img routerLink=\"/\" class = \"logo\" src = \"../../assets/pomo_pengy_logo_dark.png\">\n<div class=\"login-form\" @fadeIn>\n    <h1>login</h1>\n    <div class = \"form-input\">\n        <form [formGroup]=\"formLogin\" (ngSubmit)=\"postToDB($event)\">\n            <input type=\"text\" id=\"email\" placeholder=\"email\" name=\"email\" required formControlName=\"email\"><br>\n            <input type=\"password\" id=\"password\" placeholder=\"password\" name=\"password\" required formControlName=\"password\"><br>\n            <div class=\"submit-button\" (click)=\"postToDB($event)\">login</div>\n            <div class =\"error-messages\">\n                <p *ngIf=\"failedLogin\" class = \"alert message\">your email or password is incorrect, please try again!</p>\n                <p *ngIf=\"emptyLogin\" class = \"alert message\">one or more fields are empty!</p>\n            </div>\n        </form>\n    </div>\n    <h4>don't have an account? <a routerLink=\"/register\">register</a></h4>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login-register-buttons',\n  templateUrl: './login-register-buttons.component.html',\n  styleUrl: './login-register-buttons.component.scss'\n})\nexport class LoginRegisterButtonsComponent {\n\n}\n","<div class = \"lr-buttons-container\">\n    <div routerLink=\"/login\" class = \"lr-buttons\">login</div>\n    <div routerLink=\"/register\" class = \"lr-buttons\">register</div>\n</div>","import { Component } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrl: './logout.component.scss'\n})\nexport class LogoutComponent {\n\n  constructor(private apiService: ApiService) {\n\n  }\n\n  sendLogout() {\n    this.apiService.logout();\n  }\n\n}\n","<div class = \"button-container\">\n    <div (click)=\"sendLogout()\"  routerLink=\"/\" class = \"logout\">logout</div>\n</div>\n","import { NgClass } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent {\n  icons = [\n    {link:\"/\", src:\"../../assets/nav-icons/home-icon.png\", title:\"Home\", class:\"icon\"},\n    {link:\"/pomo\", src:\"../../assets/nav-icons/timer-icon.png\", title:\"Pomodoro Timer\", class:\"icon right-icons\"},\n    // {link:\"/notes\", src:\"../../assets/nav-icons/note-icon.png\", title:\"Notes\", class:\"icon right-icons\"},\n    {link:\"/profile\", src:\"../../assets/nav-icons/user-icon.png\", title:\"Profile\", class:\"icon right-icons\"},\n  ]\n}\n","<div class =\"nav\">\n    <a *ngFor = \"let icon of icons\" routerLink={{icon.link}}><img src = {{icon.src}} title = {{icon.title}} class={{icon.class}}></a>\n</div>\n","import { Component } from '@angular/core';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-notes-page',\n  templateUrl: './notes-page.component.html',\n  styleUrls: ['./notes-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class NotesPageComponent {\n\n}\n","<app-header></app-header>\n<app-text-editor @fadeIn></app-text-editor>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\n\n@Component({\n  selector: 'app-pomo-page',\n  templateUrl: './pomo-page.component.html',\n  styleUrls: ['./pomo-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class PomoPageComponent {\n\n}\n","<app-header></app-header>\n<app-timer @fadeIn></app-timer>\n","import { Component, OnInit } from '@angular/core';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.component.html',\n  styleUrl: './profile-page.component.scss',\n  animations: [fadeInAnimation]\n\n})\nexport class ProfilePageComponent implements OnInit{\n\n  logged_in: boolean = false;\n\n  constructor( private apiService: ApiService){}\n\n  ngOnInit() {\n    this.status()\n  }\n\n  status() {\n    const result = this.apiService.checkLogInStatus()\n    if(result[1]) {\n      this.logged_in = result[1];\n    }\n  }\n\n}\n","<app-header></app-header>\n<div *ngIf=\"!logged_in\" class = \"content not_login\" @fadeIn>\n    <h3><a routerLink=\"/register\">register</a> or <a routerLink=\"/login\">log in</a> to see personalized statistics and earn achievement badges!</h3>\n    <h2>or</h2>\n    <app-about-button></app-about-button>\n</div>\n<div *ngIf=\"logged_in\" class = \"content login\">\n    <div class = \"components-left\" @fadeIn>\n        <app-statistics></app-statistics>\n        <div class = \"profile-buttons\">\n            <app-logout></app-logout>\n            <app-about-button class = \"lower-button\"></app-about-button>\n        </div>\n    </div>\n    <div class = \"components-right\" @fadeIn>\n        <app-achievements></app-achievements>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { fadeInAnimation } from 'src/assets/animations/animations';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.scss'],\n  animations: [fadeInAnimation]\n})\nexport class RegisterPageComponent implements OnInit{\n\n  formRegister!: FormGroup;\n\n  ngOnInit() {\n    this.formRegister = new FormGroup({\n        username: new FormControl('', [Validators.required]),\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', [Validators.required, Validators.minLength(8), this.complexityValidator()])\n    });\n  }\n  \n\n  formStatus = false;\n\n  constructor( private apiService: ApiService, private router: Router) {\n\n  }\n\n  get username() {\n    return this.formRegister.get(\"username\");\n  }\n\n  get email() {\n    return this.formRegister.get(\"email\");\n  }\n\n  get password() {\n    return this.formRegister.get(\"password\");\n  }\n\n  getUsername() {\n    return this.formRegister.get(\"username\")?.value || '';\n  }\n\n  getEmail() {\n    return this.formRegister.get(\"email\")?.value || '';\n  }\n\n  getPassword() {\n    return this.formRegister.get(\"password\")?.value|| '';\n  }\n\n  postToDB(event: Event){\n\n    event.preventDefault()\n\n    if(this.formRegister.invalid) {\n      this.formStatus = true;\n    }\n    else {\n\n      this.formStatus = false;\n\n      const payload = {\n        email: this.getEmail(),\n        username: this.getUsername(),\n        password: this.getPassword()\n      };\n\n      console.log(payload)\n      \n      this.apiService.sendRegister(payload)\n        .subscribe(response => {\n          \n          alert('Registration Successful!');\n          this.router.navigate(['/login']);\n        }, error => {\n          console.error('Error:', error);\n        });\n      }\n    }\n\n    // Password validator\n    complexityValidator(): ValidatorFn {\n      return (control: AbstractControl): ValidationErrors | null => {\n        const value = control.value;\n        const hasUpperCase = /[A-Z]/.test(value);\n        const hasLowerCase = /[a-z]/.test(value);\n        const hasNumber = /[0-9]/.test(value);\n        const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(value);\n        const passwordValid = hasUpperCase && hasLowerCase && hasNumber && hasSpecialChar;\n        return !passwordValid ? { complexity: true } : null;\n      };\n    }\n\n}\n","<img routerLink=\"/\" class = \"logo\" src = \"../../assets/pomo_pengy_logo_dark.png\">\n<div class=\"register-form\" @fadeIn>\n    <h1>register</h1>\n    <div class = \"form-input\">\n        <form [formGroup]=\"formRegister\" (ngSubmit)=\"postToDB($event)\">\n            <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"email\" formControlName=\"email\"><br>\n            <input type=\"text\" id=\"username\" name =\"username\" placeholder=\"username\" formControlName=\"username\"><br>\n            <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"password (min. 8 characters)\" formControlName=\"password\"><br>\n            <div class=\"submit-button\" (click)=\"postToDB($event)\">register</div>\n            <div class = \"message\">\n\n                <p *ngIf=\"formStatus\">one or more fields are empty/incorrectly filled!</p>\n\n                <div *ngIf=\"email?.invalid && (email?.dirty || email?.touched)\">\n                    <p *ngIf = \"email?.errors?.['email']\">please enter a valid email address!</p>\n                </div>\n                <div *ngIf=\"password?.invalid && (password?.dirty || password?.touched)\">\n                    <p *ngIf = \"password?.errors?.['minlength']\">your password should have at least 8 characters!</p>\n                    <p *ngIf = \"password?.errors?.['complexity']\">your password should include at least 1 lowercase letter , 1 uppercase letter, 1 number, and 1 special character!</p>\n                </div>\n            </div>\n        </form>\n    </div>\n    <h4>have an account? <a routerLink=\"/login\">login</a></h4>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-session-button',\n  templateUrl: './session-button.component.html',\n  styleUrls: ['./session-button.component.scss']\n})\nexport class SessionButtonComponent {\n\n}\n","<div>\n    <div routerLink=\"/pomo\" class = \"start-session\">start a study session</div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-spotify-integration',\n  templateUrl: './spotify-integration.component.html',\n  styleUrls: ['./spotify-integration.component.scss']\n})\nexport class SpotifyIntegrationComponent {\n\n}\n","import { Component , OnInit} from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrl: './statistics.component.scss'\n})\nexport class StatisticsComponent implements OnInit {\n\n  constructor( private apiService:ApiService){\n\n  }\n\n  stats = {};\n\n  ngOnInit(){\n      this.getStats();\n  }\n\n  getStats() {\n    this.apiService.getUserStats()\n      .subscribe((response: any) => {  \n        if(response){\n          this.stats = response;\n        }\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n\n}\n","<h2>study insight</h2>\n\n<div class = \"stats-container\">\n    <table>\n        <tr>\n            <th>statistic</th>\n            <th>value</th>\n        </tr>\n        <!-- Each row from here on is a statistic-->\n        <tr *ngFor=\"let item of stats | keyvalue\">\n            <td>{{item.key}}</td>\n            <td>{{item.value}}</td>\n        </tr>\n    </table>\n</div>","class StorageSupervisorService {\n  setItem(key: string, value: any, expiryInMinutes: number) {\n    const now = new Date();\n\n    const item = {\n      value: value,\n      expiry: now.getTime() + expiryInMinutes * 60 * 1000,\n    };\n\n    localStorage.setItem(key, JSON.stringify(item));\n  }\n\n  getItem(key: string): any | null {\n    const itemStr = localStorage.getItem(key);\n\n    if (!itemStr) {\n      return null;\n    }\n\n    const item = JSON.parse(itemStr);\n    const now = new Date();\n\n    if (now.getTime() > item.expiry) {\n      localStorage.removeItem(key);\n      return null;\n    }\n\n    return item['value'];\n  }\n\n  removeItem(key: string): void {\n    localStorage.removeItem(key);\n  }\n}\n\n// Export an instance of the service\nexport const supervisor = new StorageSupervisorService();","import { Injectable } from '@angular/core';\nimport { Task } from './task.model';\n\n// Service (Methods) that can can be used with the task model (interface) we defined.\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private tasks: Task[] = [];\n\n  getTasks(): Task[] {\n    return this.tasks;\n  }\n\n  addTask(task: Task): void {\n    this.tasks.push(task);\n  }\n\n  removeTask(index: number): Task {\n    return this.tasks.splice(index, 1)[0];\n  }\n\n  clearTasks():void {\n    this.tasks = [];\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-text-editor',\n  templateUrl: './text-editor.component.html',\n  styleUrls: ['./text-editor.component.scss']\n})\nexport class TextEditorComponent {\n  markdownText: string = '';\n\n  fonts: string[] = ['Arial', 'Courier New', 'Georgia', 'Times New Roman', 'Verdana', 'Jua'];\n\n  // Default selected font\n  selectedFont: string = this.fonts[0];\n\n}\n","<div class=\"parent\">\n    <div class=\"child editor\">\n        <div>\n            <div class = \"toolbar\">\n                <label for=\"font-select\">Font: </label>\n                <select id=\"font-select\" [(ngModel)]=\"selectedFont\">\n                    <option *ngFor=\"let font of fonts\" [value]=\"font\">{{ font }}</option>\n                </select>\n            </div>\n        </div>\n      <textarea [(ngModel)]=\"markdownText\" placeholder=\"Enter Markdown text here...\"></textarea>\n    </div>\n    \n    <div class=\"child preview std-font\">\n      <markdown class = \"std-font\" [data]=\"markdownText\" [style.fontFamily]=\"selectedFont\" ngPreserveWhitespaces></markdown>\n    </div>\n  </div>","import { Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-time-date',\n  templateUrl: './time-date.component.html',\n  styleUrls: ['./time-date.component.scss']\n})\nexport class TimeDateComponent {\n  currentDateTime: Date;\n  public time: string;\n  public date: string;\n\n  constructor() {\n    this.currentDateTime = new Date();\n    this.time = this.formatTime(this.currentDateTime);\n    this.date = this.formatDate(this.currentDateTime);\n  }\n\n  ngOnInit(): void {\n    this.updateDateTime();\n    // Update the time every second\n    setInterval(() => this.updateDateTime(), 1000);\n  }\n\n  private formatTime(curDate: Date): string {\n    let hours = curDate.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n  \n    return (\n      this.padZero(hours) +\n      ':' +\n      this.padZero(curDate.getMinutes()) +\n      ' ' +\n      (curDate.getHours() >= 12 ? 'PM' : 'AM')\n    );\n  }\n  \n  private padZero(value: number): string {\n    return value < 10 ? '0' + value : '' + value;\n  }\n\n  private formatDate(curDate: Date): string {\n    const dOW = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    const mOY = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n    return dOW[curDate.getDay()] + \", \" + mOY[curDate.getMonth()] + \" \" +  curDate.getDate() + \", \" + curDate.getFullYear();\n  }\n\n  private updateDateTime(): void {\n    this.currentDateTime = new Date();\n    this.time = this.formatTime(this.currentDateTime);\n    this.date = this.formatDate(this.currentDateTime);\n  }\n}\n","<div>\n    <h1 class = \"time\">{{ time }}</h1>\n    <h3 class = \"date\">{{ date }}</h3>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimerService {\n\n  constructor(private apiService: ApiService) {}\n\n  minutes: number = 45; \n  seconds: number = 0;\n  entered: number = 45;\n\n  // used for pomodoro feature\n  sprint: number = 0;\n  break: number = 10;\n\n  isRunning: boolean = false;\n  interval: any;\n\n  callRestart: number = 0;\n\n  startTimer() {\n    if (this.callRestart !== 1) {\n      this.resetTimer();\n      this.callRestart = 1;\n    }\n    this.isRunning = true;\n    this.sprint++;\n    this.interval = setInterval(() => {\n      if (this.seconds > 0) {\n        this.seconds--;\n      } else if (this.entered > 0) {\n        this.entered--;\n        this.seconds = 59;\n      } else {\n        this.resetTimer();\n        this.callRestart = 0;\n        alert(\"The timer has ended!\");\n      }\n    }, 1000);\n  }\n\n  stopTimer() {\n    this.isRunning = false;\n    this.sprint--;\n    clearInterval(this.interval);\n  }\n\n  resetTimer() {\n    this.isRunning = false;\n    clearInterval(this.interval);\n\n    if (this.sprint % 2 === 1) {\n      this.postToDB(this.minutes);\n      // start a break session next\n      this.entered = this.break;\n    } else {\n      // start a study session next\n      this.entered = this.minutes;\n    }\n\n    this.seconds = 0;\n  }\n\n  postToDB(sessionTime: number){\n    const payload = {\n      sessionTime: sessionTime\n    };\n    \n    this.apiService.sendSession(payload)\n      .subscribe((response: any) => {  \n          null;\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TimerService } from '../timer.service';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss'],\n})\nexport class TimerComponent implements OnInit {\n  constructor(private timerService: TimerService) {}\n\n  displaySettings: boolean = false;\n\n  toggleSettings() {\n    this.displaySettings = !this.displaySettings;\n  }\n\n  ngOnInit() {\n    this.resetTimer();\n  }\n\n  startTimer() {\n    this.timerService.startTimer();\n  }\n\n  stopTimer() {\n    this.timerService.stopTimer();\n  }\n\n  resetTimer() {\n    this.timerService.resetTimer();\n  }\n\n  get minutes(): number {\n    return this.timerService.minutes;\n  }\n\n  get entered():number {\n    return this.timerService.entered;\n  }\n\n  get seconds(): number {\n    return this.timerService.seconds;\n  }\n\n  get isRunning(): boolean {\n    return this.timerService.isRunning;\n  }\n\n  get break(): number {\n    return this.timerService.break;\n  }\n\n  set minutes(min:number){\n    this.timerService.minutes = min;\n  }\n\n  set break(br:number){\n    this.timerService.break = br;\n  }\n\n}\n","<div class = \"timer-container\">\n    <div>\n        <h1>{{ entered | number: '2.0' }} min {{ seconds | number: '2.0' }} s</h1>\n    </div>\n    <div class=\"timer-controller\">\n        <div>\n            <button (click)=\"startTimer()\" [disabled]=\"isRunning\" class=\"timer-buttons\">start</button>\n            <button (click)=\"stopTimer()\" [disabled]=\"!isRunning\" class=\"timer-buttons\">stop</button>\n            <button (click)=\"resetTimer()\" class=\"timer-buttons\">reset</button>\n            <br>\n            <button (click)=\"toggleSettings()\" class = \"toggle\" [style.display]=\"displaySettings ? 'none': 'block'\">&#8964;</button>\n        </div>\n        <div [style.display]=\"displaySettings ? 'block' : 'none'\">\n            <p>To use the Pomodoro Timer, set your preferred study and break intervals. These intervals will alternate, helping you maximize your study time. We provided some commonly used default values.</p>\n            <label for=\"minutes\">study interval:</label>\n            <input type=\"number\" id=\"minutes\" [(ngModel)]=\"minutes\" min=\"1\" class =\"timer-input\">\n            <br>\n            <label for=\"minutes\">break interval:</label>\n            <input type=\"number\" id=\"minutes\" [(ngModel)]=\"break\" min=\"1\" class =\"timer-input\">\n            <br>\n            <button (click)=\"toggleSettings()\" class = \"toggle inner\">&#8963;</button>\n        </div>\n    </div>\n</div>\n","import { Component, ElementRef, OnInit, OnDestroy, Renderer2 } from '@angular/core';\nimport { Task } from '../task.model';\nimport { TaskService } from '../task.service';\nimport { ApiService } from '../api.service';\nimport { TaskItem } from '../task-item';\n\n@Component({\n  selector: 'app-to-do',\n  templateUrl: './to-do.component.html',\n  styleUrls: ['./to-do.component.scss']\n})\nexport class ToDoComponent implements OnInit, OnDestroy {\n  tasks: Task[] = [];\n  newTask: Task = { title: '', dueDate: new Date(), include: false, edit: false};\n\n  displayInfo:boolean = true;\n\n  constructor(private apiService: ApiService, private taskService: TaskService, private el: ElementRef, private renderer: Renderer2) {\n    \n  }\n\n  ngOnInit(): void {\n    this.getFromDB();\n    this.tasks = this.taskService.getTasks();\n  }\n\n  ngOnDestroy(): void {\n    const status_arr:any[] = this.apiService.checkLogInStatus();\n    // Clear the to do list if the user is logged in (avoid double printing)\n    if(status_arr[1]){\n      this.taskService.clearTasks()\n    }\n  }\n\n  toggleInfo(){\n    this.displayInfo = !this.displayInfo\n  }\n\n  toggleEdit(index: number) {\n    this.newTask = {\n      title: this.tasks[index].title,\n      dueDate: this.tasks[index].dueDate,\n      include: this.tasks[index].include,\n      edit: false\n    }\n    this.tasks[index].edit = !this.tasks[index].edit;\n  }\n\n  addTask(): void {\n    if (!this.newTask.title.trim()) {\n      // You can show an error message or handle it as needed\n      alert('Please enter a task title!');\n      return;\n    }\n\n    // store the task in the DB to be retrieved when re-entering the site\n    this.postToDB()\n\n    this.taskService.addTask(this.newTask);\n    this.newTask = { title: '', dueDate: new Date(), include: false, edit: false};\n\n    const container = this.el.nativeElement.querySelector('.temp-container');\n    this.renderer.setStyle(container, \"display\", \"none\");\n\n    const add_button = this.el.nativeElement.querySelector('.task-add-button');\n    this.renderer.setStyle(add_button, \"display\", \"block\");\n  }\n\n  removeTask(index: number): void {\n    const removed:Task = this.taskService.removeTask(index);\n    console.log(removed.title);\n    this.removeFromDB(removed.title);\n  }\n\n  displayForm(): void{\n    const container = this.el.nativeElement.querySelector('.temp-container');\n    this.renderer.setStyle(container, \"display\", \"block\");\n\n    const add_button = this.el.nativeElement.querySelector('.task-add-button');\n    this.renderer.setStyle(add_button, \"display\", \"none\");\n  }\n\n  parseTaskData(response: TaskItem[]) {\n    for(let i of response){\n      const task: Task = {title: i['title'], dueDate: new Date(i['dueDate']), include: i['include'], edit: false};\n      this.taskService.addTask(task);\n    }\n  }\n\n  patchTask(index: number) {\n    const payload = {\n      title: this.tasks[index].title,\n      newTitle: this.newTask.title,\n      newDueDate: this.newTask.dueDate,\n      newInclude: this.newTask.include\n    };\n\n    this.tasks[index] = {\n      title: this.newTask.title,\n      dueDate: this.newTask.dueDate,\n      include: this.newTask.include,\n      edit: false \n    };\n\n    this.newTask = { title: '', dueDate: new Date(), include: false, edit: false};\n\n    this.patchDB(payload);\n\n  }\n\n  getFromDB() {\n    this.apiService.getTasks()\n      .subscribe((response: any) => {  \n        if(response){\n          this.parseTaskData(response);\n        }\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n\n  postToDB(){\n    const payload = {\n      title: this.newTask.title,\n      dueDate: this.newTask.dueDate,\n      include: this.newTask.include\n    };\n    \n    this.apiService.sendTask(payload)\n      .subscribe((response: any) => {  \n          null;\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n\n  removeFromDB(title: string){\n    const payload = {\n      title: title\n    };\n    \n    this.apiService.removeTask(payload)\n      .subscribe((response: any) => {  \n          null;\n      }, (error: any) => {\n        console.error('Error:', error);\n      });\n  }\n\n  patchDB(payload: object) {\n    this.apiService.patchTask(payload)\n    .subscribe((response: any) => {  \n      null;\n    }, (error: any) => {\n      console.error('Error:', error);\n    });\n  }\n}\n","<div class = \"list-container\">\n    <h2 class = \"to-do-header\">\n        your tasks \n        <a (click)=\"toggleInfo()\" [style.display]=\"displayInfo ? 'none' : 'inline'\" class = \"toggle\">˅</a>\n        <a (click)=\"toggleInfo()\" [style.display]=\"displayInfo ? 'inline' : 'none'\"class = \"toggle\">˄</a>\n    </h2>\n    <div [style.display]=\"displayInfo ? 'block' : 'none'\">\n        <p class=\"container-info\">Here is where you can organize your tasks. To add a new task, press the \"+\" button and fill out the form. Check the box if you want to include a due date for your task.</p>\n    </div>\n    <div class = \"task-container\">\n        <ul>\n            <li *ngFor=\"let task of tasks; let i = index\">\n                <div *ngIf = \"task.edit == true\" class = \"temp-container task-item\">\n                    <label for=\"title\">task</label>\n                    <br>\n                    <input class = \"user-vals\" type=\"text\" id=\"title\" [(ngModel)]=\"newTask.title\"/>\n                    <br>\n                    <label for=\"date\">due date (optional)</label><input type =\"checkbox\" [(ngModel)]=\"newTask.include\">\n                    <br>\n                    <input class = \"user-vals\" type=\"datetime-local\" id=\"date\" [(ngModel)]=\"newTask.dueDate\"/>\n                    <br>\n                    <button class = \"edit\" (click)=\"toggleEdit(i)\">cancel</button>\n                    <button class = \"submit\" (click)=\"patchTask(i)\">update</button>\n                </div>\n                <div *ngIf = \"!task.edit\" class = \"task-item\">\n                    <p class = \"task-title\">{{ task.title }}</p>\n                    <br>\n                    <p *ngIf=\"task.include\" class = \"task-date\">due on {{ task.dueDate | date:'medium' }}</p>\n                    <br>\n                    <button class = \"edit\" (click)=\"toggleEdit(i)\">edit</button>\n                    <button class = \"submit\" (click)=\"removeTask(i)\">remove</button>\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class = \"task-add-button\" (click)=\"displayForm()\">\n        <h2>+</h2>\n    </div>\n    <div class = \"temp-container task-item\" style=\"display: none;\">\n        <label for=\"title\">task</label>\n        <br>\n        <!-- Ignore the errors -->\n        <input class = \"user-vals\" type=\"text\" id=\"title\" [(ngModel)]=\"newTask.title\" required/>\n        <br>\n        <label for=\"date\">due date (optional)</label><input type =\"checkbox\" [(ngModel)]=\"newTask.include\">\n        <br>\n        <!-- Ignore the errors -->\n        <input class = \"user-vals\" type=\"datetime-local\" id=\"date\" [(ngModel)]=\"newTask.dueDate\" />\n        <br>\n        <button class = \"submit\" (click)=\"addTask()\">add task</button>\n    </div>\n</div>\n","import { trigger, transition, style, animate } from '@angular/animations';\n\nexport const loadInAnimation = trigger('loadIn', [\n    transition(':enter', [\n      style({ opacity: 0 }),\n      animate('2s', style({ opacity: 1 }))\n    ])\n  ]);\n\nexport const fadeInAnimation = trigger('fadeIn', [\n  transition(':enter', [\n    style({ opacity: 0 }),\n    animate('1.5s', style({ opacity: 1 }))\n  ]),\n  transition(':leave', [\n    animate('1.5s', style({ opacity: 0 }))\n  ])\n]);","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AboutButtonComponent","_","_2","selectors","decls","vars","consts","template","AboutButtonComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","fadeInAnimation","AboutComponent","ngOnInit","document","body","classList","add","ngOnDestroy","remove","AboutComponent_Template","ɵɵelement","ɵɵproperty","undefined","AchievementsComponent","constructor","apiService","displayInfo","cur","getStats","toggleInfo","getUserRank","subscribe","response","error","console","ɵɵdirectiveInject","i1","ApiService","AchievementsComponent_Template","ɵɵlistener","AchievementsComponent_Template_a_click_4_listener","AchievementsComponent_Template_a_click_6_listener","ɵɵadvance","ɵɵstyleProp","ɵɵtextInterpolate","HttpHeaders","HttpParams","Observable","supervisor","http","url","sendRegister","data","post","sendLogin","sendTask","token","getItem","headers","authorization","getTasks","log","get","removeTask","params","set","title","delete","patchTask","patch","getUserStats","sendSession","logout","removeItem","checkLogInStatus","user","ɵɵinject","HttpClient","factory","ɵfac","providedIn","RouterModule","HomePageComponent","PomoPageComponent","RegisterPageComponent","LoginPageComponent","NotesPageComponent","ProfilePageComponent","routes","path","component","AppRoutingModule","_3","forRoot","imports","exports","loadInAnimation","AppComponent","AppComponent_Template","BrowserModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","TimeDateComponent","SessionButtonComponent","NavBarComponent","ToDoComponent","TimerComponent","SpotifyIntegrationComponent","TextEditorComponent","LoginRegisterButtonsComponent","HeaderComponent","MarkdownModule","HttpClientModule","StatisticsComponent","CarouselComponent","LogoutComponent","AppModule","bootstrap","forChild","loader","declarations","ctx_r0","achievement_badges","getPreviousIndex","image","ɵɵsanitizeUrl","ctx_r1","getNextIndex","desc","status","stats","currentIndex","setStatus","statistics","timeStudy","sessions","numTask","showPrevious","length","showNext","CarouselComponent_Template","CarouselComponent_Template_button_click_2_listener","ɵɵtemplate","CarouselComponent_img_5_Template","CarouselComponent_img_7_Template","CarouselComponent_Template_button_click_8_listener","ɵɵpureFunction1","_c0","ɵɵtextInterpolate1","logged_in","result","HeaderComponent_Template","HeaderComponent_div_1_Template","HeaderComponent_p_2_Template","HomePageComponent_Template","FormControl","FormGroup","Validators","router","formLogin","email","required","password","minLength","failedLogin","emptyLogin","getEmail","value","getPassword","postToDB","event","preventDefault","invalid","payload","setItem","username","accessToken","navigate","i2","Router","LoginPageComponent_Template","LoginPageComponent_Template_form_ngSubmit_5_listener","$event","LoginPageComponent_Template_div_click_10_listener","LoginPageComponent_p_13_Template","LoginPageComponent_p_14_Template","LoginRegisterButtonsComponent_Template","sendLogout","LogoutComponent_Template","LogoutComponent_Template_div_click_1_listener","ɵɵpropertyInterpolate","icon_r1","link","ɵɵclassMap","class","src","icons","NavBarComponent_Template","NavBarComponent_a_1_Template","NotesPageComponent_Template","PomoPageComponent_Template","ProfilePageComponent_Template","ProfilePageComponent_div_1_Template","ProfilePageComponent_div_2_Template","RegisterPageComponent_div_16_p_1_Template","errors","RegisterPageComponent_div_17_p_1_Template","RegisterPageComponent_div_17_p_2_Template","ctx_r2","formRegister","complexityValidator","formStatus","getUsername","alert","control","hasUpperCase","test","hasLowerCase","hasNumber","hasSpecialChar","passwordValid","complexity","RegisterPageComponent_Template","RegisterPageComponent_Template_form_ngSubmit_5_listener","RegisterPageComponent_Template_div_click_12_listener","RegisterPageComponent_p_15_Template","RegisterPageComponent_div_16_Template","RegisterPageComponent_div_17_Template","dirty","touched","SessionButtonComponent_Template","SpotifyIntegrationComponent_Template","styles","item_r1","key","StatisticsComponent_Template","StatisticsComponent_tr_9_Template","ɵɵpipeBind1","StorageSupervisorService","expiryInMinutes","now","Date","item","expiry","getTime","localStorage","JSON","stringify","itemStr","parse","TaskService","tasks","addTask","task","push","index","splice","clearTasks","font_r1","markdownText","fonts","selectedFont","TextEditorComponent_Template","ɵɵtwoWayListener","TextEditorComponent_Template_select_ngModelChange_6_listener","ɵɵtwoWayBindingSet","TextEditorComponent_option_7_Template","TextEditorComponent_Template_textarea_ngModelChange_8_listener","ɵɵtwoWayProperty","currentDateTime","time","formatTime","date","formatDate","updateDateTime","setInterval","curDate","hours","getHours","padZero","getMinutes","dOW","mOY","getDay","getMonth","getDate","getFullYear","TimeDateComponent_Template","TimerService","minutes","seconds","entered","sprint","break","isRunning","callRestart","startTimer","resetTimer","interval","stopTimer","clearInterval","sessionTime","timerService","displaySettings","toggleSettings","min","br","TimerComponent_Template","TimerComponent_Template_button_click_8_listener","TimerComponent_Template_button_click_10_listener","TimerComponent_Template_button_click_12_listener","TimerComponent_Template_button_click_15_listener","TimerComponent_Template_input_ngModelChange_22_listener","TimerComponent_Template_input_ngModelChange_26_listener","TimerComponent_Template_button_click_28_listener","ɵɵtextInterpolate2","ɵɵpipeBind2","ToDoComponent_li_12_div_1_Template_input_ngModelChange_4_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","newTask","ɵɵresetView","ToDoComponent_li_12_div_1_Template_input_ngModelChange_8_listener","ctx_r7","include","ToDoComponent_li_12_div_1_Template_input_ngModelChange_10_listener","ctx_r8","dueDate","ToDoComponent_li_12_div_1_Template_button_click_12_listener","i_r2","ctx_r9","toggleEdit","ToDoComponent_li_12_div_1_Template_button_click_14_listener","ctx_r11","ctx_r3","task_r1","ToDoComponent_li_12_div_2_p_4_Template","ToDoComponent_li_12_div_2_Template_button_click_6_listener","_r17","ctx_r15","ToDoComponent_li_12_div_2_Template_button_click_8_listener","ctx_r18","ToDoComponent_li_12_div_1_Template","ToDoComponent_li_12_div_2_Template","edit","taskService","el","renderer","getFromDB","status_arr","trim","container","nativeElement","querySelector","setStyle","add_button","removed","removeFromDB","displayForm","parseTaskData","i","newTitle","newDueDate","newInclude","patchDB","ElementRef","Renderer2","ToDoComponent_Template","ToDoComponent_Template_a_click_3_listener","ToDoComponent_Template_a_click_5_listener","ToDoComponent_li_12_Template","ToDoComponent_Template_div_click_13_listener","ToDoComponent_Template_input_ngModelChange_20_listener","ToDoComponent_Template_input_ngModelChange_24_listener","ToDoComponent_Template_input_ngModelChange_26_listener","ToDoComponent_Template_button_click_28_listener","trigger","transition","style","animate","opacity","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}